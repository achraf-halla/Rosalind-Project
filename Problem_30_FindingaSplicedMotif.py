# -*- coding: utf-8 -*-
"""
Created on Tue Nov  5 21:09:40 2024

@author: user
"""

s = "GATTAAACAGTACCAGGTGAACAACGCTAGGATCATGCAATCCACAGCACTGAGAGGCTGCACCAACGCCTAGTGACCTCCCTTTTATCTGACAACAAGCTCTGAGTCATTTCAGGTGTCAGACTGCCGCTATTGGACAAGGTCGATTCGTTGACTGGCTCGGCTGGACTCAAGGGCGCTTCGGTATGCGCTTGCGACCCTGTTACGTTTAAACGCCCACATCACAGACGGTCGGCGTGCGCAGCAACATTGTATGTACGGGATACAAGAAAAATAGTGGTTCATGTTGTAGGCCACTCTAGTGAGGCAGGTCGATGATGGCAACAGCAGTGTTAGCAAAGGGGGACGCACGTGAAGATACTGCCACCATAGATTAGCGAAGCCACCAGTCAGAGGAACAGTGGACTCCACATACTGATGGACATTTGGTTAGCAGCTCCGACTTGCTATGGTGTGTACGATCTCACGGAGCCGGCACCCAACTAAATCTCTTCTAAACTCGTCAACATAGGGCGCGACCCAGTCTAACGGGTTGGCGTGTACTTTCGCGGATCTCTTACTGCAGCTGCTTCTGAGCGTTGCTACGCCTATCACCGGGTTCAGACACTTTAGGCGGCGCGAAAGACAGCTGGGTGCAGAAACTCTGGCTTAGCTTGCTGCAGACGCATACTGATCTCTATGGTCCTACTGTGGATAGACGTTTGGTTGTAAGTCTTTAGTCCAACCCGAACCGCGATATTGCTGAAACGACATGATAACGTCTCGAAACAACGTAAGGCGCAACGGTGAAGGTGCTCTCTCTGATACAGTATCCGTCCCACTCGAGAAGACAGGCCCGCGAGGATGTTCTCCGCGCTGGATGAAGTTCGAGGACCTCGGACGCCCTCGTTGGCCCTTGTTTCAAGAGCTGAGATCTTTTTCCGGGCACATGATGTGCATGGAGTCTAATCCTTGAGGGGACATACTTACGGTGTTTGCAATCGTAGATGGTC"
t = "GCCCCTGGTGTACACGACGTCGGTAATACACTTAGCTGGCGCCTTTTACTGGGAGCTGTGTCGGAATGCGGTGGGCTT"
def find_subsequence_indices(s, t):
    """
    Given: Two DNA strings s and t (each of length at most 1 kbp) in FASTA format.

    Return: One collection of indices of s in which the symbols of t appear as a subsequence of s.

    """
    indices = []
    pos_in_s = 0

    for char in t:
        pos_in_s = s.find(char, pos_in_s)
        if pos_in_s == -1:
            return None
        indices.append(pos_in_s + 1)  
        pos_in_s += 1  

    return  " ".join(str(x) for x in indices)

find_subsequence_indices(s, t)
            
    
    
